name: Reusable Bootstrap Infrastructure

on:
  workflow_call:
    inputs:
      auto_bootstrap:
        description: 'Whether to auto bootstrap'
        required: true
        default: false
        type: boolean
      ansible-user:
        description: 'Ansible user for SSH connections'
        required: true
        type: string
        default: 'ubuntu'
    secrets:
      ANSIBLE_HOSTS:
        required: true
      ANSIBLE_USER:
        required: false
      SSH_PRIVATE_KEY:
        required: true
      SSH_KNOWN_HOSTS:
        required: false

jobs:
  bootstrap:
    if: ${{ inputs.auto_bootstrap == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'

      - name: Install Ansible
        run: |
          python -m pip install --upgrade pip
          pip install ansible

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          
          if [ -n "${{ secrets.SSH_KNOWN_HOSTS }}" ]; then
            echo "${{ secrets.SSH_KNOWN_HOSTS }}" > ~/.ssh/known_hosts
            chmod 644 ~/.ssh/known_hosts
          else
            # Add common hosts to known_hosts to avoid prompts
            ssh-keyscan -H github.com >> ~/.ssh/known_hosts 2>/dev/null || true
          fi

      - name: Generate Inventory
        env:
          ANSIBLE_HOSTS: ${{ secrets.ANSIBLE_HOSTS }}
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER || inputs.ansible-user }}
        run: |
          cd ansible
          ansible-playbook playbooks/generate_inventory.yml

      - name: Run Bootstrap Playbook
        env:
          ANSIBLE_HOSTS: ${{ secrets.ANSIBLE_HOSTS }}
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER || inputs.ansible-user }}
        run: |
          cd ansible
          ansible-playbook -i inventory.ini playbooks/setup_ci_env.yml --verbose 