name: Reusable Bootstrap Infrastructure

on:
  workflow_call:
    inputs:
      auto_bootstrap:
        description: 'Whether to auto bootstrap'
        required: true
        default: false
        type: boolean
    secrets:
      ANSIBLE_HOSTS:
        required: true
      ANSIBLE_USER:
        required: false
      SSH_PRIVATE_KEY:
        required: true
      SSH_KNOWN_HOSTS:
        required: false
      ANSIBLE_HOSTS_PASSWORD:
        required: false  # For initial password-based bootstrap
      TEMPLATES_PAT:
        required: false  # For private repo access in checkout

jobs:
  bootstrap:
    if: ${{ inputs.auto_bootstrap == true }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Checkout templates repo for local actions
        uses: actions/checkout@v4
        with:
          repository: SkiesGames/SkiesDota-CI-CD-Templates
          path: templates  # Clone to subpath to avoid conflicts
          # No token needed for public repo

      - name: Setup Docker
        uses: ./templates/.github/actions/setup-docker  # Point to checked-out templates path
        with:
          github-token: ${{ secrets.TEMPLATES_PAT }}  # Use PAT for private GHCR pull access

      - name: Try to pull custom Ansible image
        id: pull-image
        uses: ./templates/.github/actions/pull-image  # Point to checked-out templates path
        with:
          image-name: ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod:latest
          output-name: custom-image-available

      - name: Generate Inventory (Custom Image)
        # if: steps.pull-image.outputs.custom-image-available == 'true'  # Hardcoded true for now
        env:
          ANSIBLE_HOSTS: ${{ secrets.ANSIBLE_HOSTS }}
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod:latest \
            bash -c "
              if [ -n \"$ANSIBLE_HOSTS_PASSWORD\" ]; then
                ansible-playbook /workspace/templates/ansible/playbooks/generate_initial_inventory.yml
              else
                ansible-playbook /workspace/templates/ansible/playbooks/generate_inventory.yml
              fi
            "

      - name: Run Bootstrap Playbook (Custom Image)
        # if: steps.pull-image.outputs.custom-image-available == 'true'  # Hardcoded true for now
        env:
          ANSIBLE_HOSTS: ${{ secrets.ANSIBLE_HOSTS }}
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            -e SSH_PRIVATE_KEY \
            -e SSH_KNOWN_HOSTS \
            ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod:latest \
            bash -c "
              cd ansible &&
              ansible-playbook -i /workspace/inventory.ini -e \"roles_path=roles:/workspace/templates/ansible/roles\" playbooks/bootstrap.yml --verbose
            "

      - name: Debug paths and roles
        run: |
          pwd
          ls -la /workspace/ansible/roles || echo "Local roles dir not found"
          ls -la /workspace/templates/ansible/roles || echo "Template roles dir not found"
          cat /etc/ansible/ansible.cfg || echo "ansible.cfg not found"

      - name: Generate Inventory (Fallback)
        if: steps.pull-image.outputs.custom-image-available == 'false'
        env:
          ANSIBLE_HOSTS: ${{ secrets.ANSIBLE_HOSTS }}
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            python:3.13-slim \
            bash -c "
              apt-get update && apt-get install -y openssh-client
              pip install --no-cache-dir ansible
              cd ansible && 
              ansible-playbook playbooks/generate_inventory.yml
            "

      - name: Run Bootstrap Playbook (Fallback)
        if: steps.pull-image.outputs.custom-image-available == 'false'
        env:
          ANSIBLE_HOSTS: ${{ secrets.ANSIBLE_HOSTS }}
          ANSIBLE_USER: ${{ secrets.ANSIBLE_USER }}
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SSH_KNOWN_HOSTS: ${{ secrets.SSH_KNOWN_HOSTS }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            -e SSH_PRIVATE_KEY \
            -e SSH_KNOWN_HOSTS \
            python:3.13-slim \
            bash -c "
              apt-get update && apt-get install -y openssh-client
              pip install --no-cache-dir ansible
              cd ansible && 
              ansible-playbook -i inventory.ini playbooks/bootstrap.yml --verbose  # Custom bootstrap for full setup (Docker, firewall, sync, deploy)
            " 