name: Manual Format-Lint and Test Pipeline

on:
  workflow_dispatch:
    inputs:
      format-lint:
        description: 'Run format and lint'
        required: false
        default: true
        type: boolean
      test:
        description: 'Run tests'
        required: false
        default: true
        type: boolean

permissions:
  contents: write
  packages: read

jobs:
  format-lint:
    if: inputs.format-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: ./.github/actions/setup-docker
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run formatting and linting
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod-format-lint:latest \
            bash .github/scripts/ansible-prod-format-lint.sh

      - name: Commit formatting changes
        run: |
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          # Only add YAML files that were formatted
          git add ansible/**/*.yml ansible/**/*.yaml || true
          if ! git diff --staged --quiet; then
            git commit -m "Auto-format YAML files with Prettier"
            git push
          else
            echo "No formatting changes to commit"
          fi

  test:
    if: inputs.test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Docker
        uses: ./.github/actions/setup-docker
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Run tests
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod-test:latest \
            bash .github/scripts/ansible-prod-test.sh
