name: Reusable SSH Key Setup

on:
  workflow_call:
    inputs:
      target_hosts:
        description: 'Target host IPs (comma-separated)'
        required: true
        type: string
      target_user:
        description: 'SSH username'
        required: true
        type: string
        default: 'root'
      target_password:
        description: 'SSH password'
        required: true
        type: string
      initial_setup:
        description: 'Initial setup mode (requires password auth)'
        required: false
        default: true
        type: boolean
    secrets:
      token:
        required: true

permissions:
  contents: read
  packages: read

jobs:
  setup-ssh-keys:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Try to pull custom Ansible image
        id: pull-image
        run: |
          if docker pull ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod:latest; then
            echo "custom-image-available=true" >> $GITHUB_OUTPUT
          else
            echo "custom-image-available=false" >> $GITHUB_OUTPUT
          fi

      - name: Generate inventory using Ansible (Custom Image)
        if: steps.pull-image.outputs.custom-image-available == 'true'
        env:
          ANSIBLE_HOSTS: ${{ inputs.target_hosts || github.event.inputs.target_hosts }}
          ANSIBLE_USER: ${{ inputs.target_user || github.event.inputs.target_user }}
          ANSIBLE_HOSTS_PASSWORD: ${{ inputs.target_password || github.event.inputs.target_password }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            -e ANSIBLE_HOSTS_PASSWORD \
            ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod:latest \
            bash -c "
              cd ansible
              ansible-playbook playbooks/generate_initial_inventory.yml
            "

      - name: Generate inventory using Ansible (Fallback)
        if: steps.pull-image.outputs.custom-image-available == 'false'
        env:
          ANSIBLE_HOSTS: ${{ inputs.target_hosts || github.event.inputs.target_hosts }}
          ANSIBLE_USER: ${{ inputs.target_user || github.event.inputs.target_user }}
          ANSIBLE_HOSTS_PASSWORD: ${{ inputs.target_password || github.event.inputs.target_password }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            -e ANSIBLE_HOSTS_PASSWORD \
            python:3.13-slim \
            bash -c "
              apt-get update && apt-get install -y openssh-client
              pip install --no-cache-dir ansible
              cd ansible
              ansible-playbook playbooks/generate_initial_inventory.yml
            "

      - name: Run SSH key setup (Custom Image)
        if: steps.pull-image.outputs.custom-image-available == 'true'
        env:
          CI_JOB_NAME: add_ssh_key
          ANSIBLE_HOSTS: ${{ inputs.target_hosts || github.event.inputs.target_hosts }}
          ANSIBLE_USER: ${{ inputs.target_user || github.event.inputs.target_user }}
          ANSIBLE_HOSTS_PASSWORD: ${{ inputs.target_password || github.event.inputs.target_password }}
          GITHUB_TOKEN: ${{ secrets.token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e CI_JOB_NAME \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            -e ANSIBLE_HOSTS_PASSWORD \
            -e GITHUB_TOKEN \
            -e GITHUB_REPOSITORY \
            ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod:latest \
            bash -c "
              cd ansible
              ansible-playbook -i ../inventory.ini playbooks/ssh_key_set_up.yml
            "

      - name: Run SSH key setup (Fallback)
        if: steps.pull-image.outputs.custom-image-available == 'false'
        env:
          CI_JOB_NAME: add_ssh_key
          ANSIBLE_HOSTS: ${{ inputs.target_hosts || github.event.inputs.target_hosts }}
          ANSIBLE_USER: ${{ inputs.target_user || github.event.inputs.target_user }}
          ANSIBLE_HOSTS_PASSWORD: ${{ inputs.target_password || github.event.inputs.target_password }}
          GITHUB_TOKEN: ${{ secrets.token }}
          GITHUB_REPOSITORY: ${{ github.repository }}
        run: |
          docker run --rm \
            -v ${{ github.workspace }}:/workspace \
            -w /workspace \
            -e CI_JOB_NAME \
            -e ANSIBLE_HOSTS \
            -e ANSIBLE_USER \
            -e ANSIBLE_HOSTS_PASSWORD \
            -e GITHUB_TOKEN \
            -e GITHUB_REPOSITORY \
            python:3.13-slim \
            bash -c "
              apt-get update && apt-get install -y openssh-client
              pip install --no-cache-dir ansible ansible-posix
              cd ansible
              ansible-playbook -i ../inventory.ini playbooks/ssh_key_set_up.yml
            "

      - name: Upload SSH private key to GitHub Secrets
        if: success()
        run: |
          # This step would upload the generated private key to GitHub Secrets
          # Implementation depends on your specific requirements
          echo "SSH key setup completed successfully"
          echo "Private key should be uploaded to GitHub Secrets for future use" 