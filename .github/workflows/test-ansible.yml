name: Test Ansible Code

on:
  push:
    paths:
      - 'Dockerfile.test'
  pull_request:
    paths:
      - 'Dockerfile.test'
  workflow_dispatch:
  workflow_run:
    workflows: ["Lint Ansible Code"]
    types:
      - completed

permissions:
  contents: read
  packages: read

jobs:
  test-ansible-syntax:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Try to pull custom image
        id: pull-image
        run: |
          if docker pull ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-test:latest; then
            echo "custom-image-available=true" >> $GITHUB_OUTPUT
            echo "Successfully pulled custom image"
          else
            echo "custom-image-available=false" >> $GITHUB_OUTPUT
            echo "Failed to pull custom image, will use fallback"
          fi

      - name: Test Ansible syntax for roles (Custom Image)
        if: steps.pull-image.outputs.custom-image-available == 'true'
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-test:latest bash -c "
            ansible-galaxy collection install -r ansible/collections/requirements.yml
            for role in ansible/roles/*/; do
              echo \"CHECKING ROLE: \$role\"
              python -m ansiblelint \"\$role\" --nocolor
            done
          "

      - name: Test Ansible syntax for roles (Fallback)
        if: steps.pull-image.outputs.custom-image-available == 'false'
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace python:3.13-slim bash -c "
            pip install --no-cache-dir ansible ansible-lint
            ansible-galaxy collection install -r ansible/collections/requirements.yml
            for role in ansible/roles/*/; do
              echo \"CHECKING ROLE: \$role\"
              python -m ansiblelint \"\$role\" --nocolor
            done
          "

      - name: Test Ansible syntax for playbooks (Custom Image)
        if: steps.pull-image.outputs.custom-image-available == 'true'
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-test:latest bash -c "
            ansible-galaxy collection install -r ansible/collections/requirements.yml
            for playbook in ansible/playbooks/*.yml; do
              echo \"CHECKING PLAYBOOK: \$playbook\"
              python -m ansiblelint \"\$playbook\" --nocolor
            done
          "

      - name: Test Ansible syntax for playbooks (Fallback)
        if: steps.pull-image.outputs.custom-image-available == 'false'
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace python:3.13-slim bash -c "
            pip install --no-cache-dir ansible ansible-lint
            ansible-galaxy collection install -r ansible/collections/requirements.yml
            for playbook in ansible/playbooks/*.yml; do
              echo \"CHECKING PLAYBOOK: \$playbook\"
              python -m ansiblelint \"\$playbook\" --nocolor
            done
          "

  test-playbooks:
    runs-on: ubuntu-latest
    needs: [test-ansible-syntax]
    if: needs.test-ansible-syntax.result == 'success'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Try to pull custom image
        id: pull-image
        run: |
          if docker pull ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-test:latest; then
            echo "custom-image-available=true" >> $GITHUB_OUTPUT
            echo "Successfully pulled custom image"
          else
            echo "custom-image-available=false" >> $GITHUB_OUTPUT
            echo "Failed to pull custom image, will use fallback"
          fi

      - name: Test playbooks with dry-run (Custom Image)
        if: steps.pull-image.outputs.custom-image-available == 'true'
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-test:latest bash -c "
            ansible-galaxy collection install -r ansible/collections/requirements.yml
            for playbook in ansible/playbooks/*.yml; do
              echo \"CHECKING PLAYBOOK: \$playbook\"
              ansible-playbook \"\$playbook\" --check --diff -i localhost,
            done
          "

      - name: Test playbooks with dry-run (Fallback)
        if: steps.pull-image.outputs.custom-image-available == 'false'
        run: |
          docker run --rm -v ${{ github.workspace }}:/workspace -w /workspace python:3.13-slim bash -c "
            pip install --no-cache-dir ansible ansible-lint
            ansible-galaxy collection install -r ansible/collections/requirements.yml
            for playbook in ansible/playbooks/*.yml; do
              echo \"CHECKING PLAYBOOK: \$playbook\"
              ansible-playbook \"\$playbook\" --check --diff -i localhost,
            done
          " 