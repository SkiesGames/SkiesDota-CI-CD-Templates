name: Run Ansible Playbook
description: Runs Ansible with inventory generation and specified playbook using SSH key authentication.

inputs:
  ansible_hosts:
    description: 'Line-separated list of Ansible host IPs'
    required: true
  ansible_user:
    description: 'Ansible SSH username'
    required: true
  ssh_private_key:
    description: 'SSH private key for authentication'
    required: true
  playbook:
    description: 'Path to the Ansible playbook to run (relative to ansible/ directory)'
    required: true
  extra_environment_vars:
    description: 'Additional environment variables as JSON object'
    required: false
    default: '{}'

runs:
  using: composite
  steps:
    - name: Setup SSH Agent
      uses: webfactory/ssh-agent@v0.9.0
      with:
        ssh-private-key: ${{ inputs.ssh_private_key }}

    - name: Dynamically Scan and Add Known Hosts
      run: |
        mkdir -p ~/.ssh
        # Read newline-separated hosts
        while IFS= read -r host; do
          # Skip empty lines
          if [ -n "$host" ]; then
            SCAN=$(ssh-keyscan -H "$host" 2>/dev/null)
            if [ -n "$SCAN" ]; then
              echo "$SCAN" >> ~/.ssh/known_hosts
              echo "Added $host to known_hosts"
            else
              echo "Warning: Failed to scan $host"
            fi
          fi
        done <<< "${{ inputs.ansible_hosts }}"
      shell: bash

    - name: Run Ansible Playbooks in Docker
      run: |
        # Parse extra environment variables from JSON
        EXTRA_ENV_FLAGS=""
        if [ "${{ inputs.extra_environment_vars }}" != "{}" ]; then
          echo "Parsing extra environment variables..."
          echo '${{ inputs.extra_environment_vars }}' | jq -r 'to_entries[] | "-e \(.key)=\(.value | @sh)"' | while read -r flag; do
            EXTRA_ENV_FLAGS="$EXTRA_ENV_FLAGS $flag"
          done
          # Re-read into variable (subshell workaround)
          EXTRA_ENV_FLAGS=$(echo '${{ inputs.extra_environment_vars }}' | jq -r 'to_entries[] | "-e \(.key)=\"\(.value)\""' | tr '\n' ' ')
          echo "Extra environment flags: $EXTRA_ENV_FLAGS"
        fi
        
        # Run Ansible with all environment variables
        docker run --rm \
          -v $GITHUB_WORKSPACE:/workspace \
          -v $SSH_AUTH_SOCK:/ssh-agent \
          -v ~/.ssh/known_hosts:/root/.ssh/known_hosts:ro \
          -e SSH_AUTH_SOCK=/ssh-agent \
          -e ANSIBLE_HOSTS="${{ inputs.ansible_hosts }}" \
          -e ANSIBLE_USER="${{ inputs.ansible_user }}" \
          $EXTRA_ENV_FLAGS \
          -w /workspace \
          ghcr.io/skiesgames/skiesdota-ci-cd-templates/ansible-prod:latest \
          bash -c "ansible-playbook /workspace/templates/ansible/playbooks/generate_inventory.yml && ansible-playbook -i /workspace/inventory.ini ansible/${{ inputs.playbook }}"
      shell: bash
