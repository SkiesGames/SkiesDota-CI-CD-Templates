---
- name: Prepare MongoDB Environment
  hosts: localhost
  connection: local
  become: true
  tasks:
    - name: Ensure Docker is running and accessible
      ansible.builtin.command: docker ps
      register: docker_check
      failed_when: false
      changed_when: false

    - name: Fail if Docker is not available
      ansible.builtin.fail:
        msg: "Docker is not available or not running. Check Docker socket permissions."
      when: docker_check.rc != 0

    - name: Create necessary directories for MongoDB
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - /tmp/mongodb_data
        - /tmp/mongodb_logs

    - name: Remove existing MongoDB container if exists
      ansible.builtin.docker_container:
        name: mongodb
        state: absent
      ignore_errors: true

    - name: Start MongoDB container (simple configuration)
      ansible.builtin.docker_container:
        name: mongodb
        image: mongo:6.0
        state: started
        ports:
          - "27017:27017"
        command: mongod --bind_ip_all
        restart_policy: unless-stopped
        env:
          MONGO_INITDB_DATABASE: test

    - name: Wait a moment for container to start
      ansible.builtin.pause:
        seconds: 10

    - name: Check MongoDB container status
      ansible.builtin.docker_container_info:
        name: mongodb
      register: container_info

    - name: Display container status
      ansible.builtin.debug:
        var: container_info

    - name: Check MongoDB container logs
      ansible.builtin.command: docker logs mongodb
      register: mongodb_logs
      changed_when: false

    - name: Display MongoDB logs
      ansible.builtin.debug:
        var: mongodb_logs.stdout_lines

    - name: Check if port 27017 is listening
      ansible.builtin.command: netstat -tlnp | grep 27017
      register: port_check
      changed_when: false
      ignore_errors: true

    - name: Display port check result
      ansible.builtin.debug:
        var: port_check

    - name: Wait for MongoDB to be ready (with longer timeout)
      ansible.builtin.wait_for:
        port: 27017
        timeout: 120
        delay: 15

    - name: Test MongoDB connection
      ansible.builtin.command: docker exec mongodb mongosh --eval "db.runCommand('ping')"
      register: mongo_test
      changed_when: false
      ignore_errors: true

    - name: Display MongoDB connection test result
      ansible.builtin.debug:
        var: mongo_test

    - name: Set replica set configuration
      ansible.builtin.set_fact:
        mongo_hosts:
          - "{{ ansible_default_ipv4.address }}:27017"
          - "{{ ansible_default_ipv4.address }}:27018"
          - "{{ ansible_default_ipv4.address }}:27019" 