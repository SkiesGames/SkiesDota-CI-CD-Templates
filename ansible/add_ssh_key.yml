add_ssh_key:
  stage: add_ssh_key
  image: $CI_REGISTRY_IMAGE/ansible:latest
  before_script:
    - apt-get update && apt-get install -y openssh-client sshpass jq
  script:
    # Generate SSH key pair
    - ssh-keygen -t ed25519 -f /tmp/ci_id_ed25519 -N ""
    # Add remote host to known_hosts
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan -H "$NODE_1_IP" >> ~/.ssh/known_hosts
    # Use sshpass to copy the public key to the remote node
    - sshpass -p "$NODE_1_PASS" ssh-copy-id -i /tmp/ci_id_ed25519.pub -o StrictHostKeyChecking=no $NODE_1_USER@$NODE_1_IP
    # Upload private key to GitLab CI/CD variable via API
    - |
      PRIVATE_KEY=$(cat /tmp/ci_id_ed25519)
      VAR_NAME="SSH_PRIVATE_KEY"
      VAR_ID=$(curl -sS --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/variables" | jq -r ".[] | select(.key==\"$VAR_NAME\") | .key")
      if [ "$VAR_ID" = "$VAR_NAME" ]; then
        curl -sS --request PUT --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" \
          --data "value=$(printf '%s' \"$PRIVATE_KEY\")" \
          "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/variables/$VAR_NAME"
      else
        curl -sS --request POST --header "PRIVATE-TOKEN: $GITLAB_API_TOKEN" \
          --data "key=$VAR_NAME" \
          --data "value=$(printf '%s' \"$PRIVATE_KEY\")" \
          --data "protected=true" \
          --data "masked=true" \
          "https://gitlab.com/api/v4/projects/$CI_PROJECT_ID/variables"
      fi
  rules:
    - when: manual
  allow_failure: false
